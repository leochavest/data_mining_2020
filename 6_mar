# Precedencia de operacoes:
# ** (potencia)
# * / (multiplicacao e divisao)
# + - (soma e subtracao)


def faz_conta():
    return 0


def oi():
    print('oi')
    print('oi')


def soma_dois_valores(valor1, valor2):
    return valor1 + valor2


def raiz(valor, base):
    return valor ** (1 / base)


def e_par(valor):
    return (valor % 2) == 0


def div_por_seis(valor):
    return ((valor % 2) == 0) and ((valor % 3) == 0)



def testa_par():
    """Le um valor inserido pelo usuario, verifica se o valor e par e retorna uma mensagem."""
    parada = False
    while parada == False:
        valor = input('Insira um valor numérico, ou aperte ENTER para encerrar...\n')
        if valor == '':
            parada = True
        elif e_par(int(valor)) == True:
            print('O valor inserido é par.')
        else:
            print('O valor inserido é ímpar.')


def dez_mult_tres():
    """Imprime os primeiros 10 numeros nao negativos multiplos de 3."""
    cont = 0
    numero = 1
    while cont < 10:
        if numero % 3 == 0:
            print(numero)
            cont += 1
        numero += 1  # numero = numero + 1

def ordena_tres(valor1, valor2, valor3):
    if valor1 > valor2:
        valor1, valor2 = valor2, valor1
    if valor2 > valor3:
        valor2, valor3 = valor3, valor2
    if valor1 > valor2:
        valor1, valor2 = valor2, valor1
    print(valor1, valor2, valor3)


def orden_lista(val):
    for i in val:
        print(i)
    val.sort()
    print(val)


def decompor(valor):
    print(valor % 10)
    print((valor // 10) % 10)
    print(valor // 100)


def multiplo(valor, divisor):
    if valor % divisor == 0:
        print("É multiplo")
    else:
        print('Naon é multiplo')


def informe():
    for i in range(3):
        val = int(input("Insira uma tapa \n"))
        multiplo(val, 2)

def maior():
    maximo = 0
    for i in range(10):
        valor = int(input("Insira numeros putiane \n"))
        if valor > maximo:
            maximo = valor
    print("Esse é o máximo ", maximo, '\n')

def inf_maior():
    num = []
    for i in range(3):
        num.append(int(input("bota \n")))
    print(max(num))

def main():
    # maior()
    inf_maior()

if __name__ == "__main__":
    main()


